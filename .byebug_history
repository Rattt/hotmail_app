continue
session[:access_token]
CONTENT_TYPE
session[:user_id]
continue
uri.path
continue
exit
continue
@user_id = data[:extra][:raw_info][:id]
data[:extra][:raw_info][:id]
exit
@user_id
uri.path
uri.host
uri
continue
exit
data[:extra][:raw_info][:id]
exit
response = http.get(path, headers)
continue
session[:access_token]
exit
session[:access_token]
data[:extra][:raw_info]
response = http.get(path, headers)
exit
uri.request_uri
response
response = http.request(Net::HTTP::Get.new(uri.request_uri))
http.request(Net::HTTP::Get.new(uri.request_uri))
Net::HTTP::Get.new(uri.request_uri)
exit
response = http.get(path)
path = uri.path.empty? ? "/" : uri.path
http = Net::HTTP.new(uri.host, uri.port)
uri = URI("#{GRAPH_RESOURCE}/v1.0/$metadata#users('b63d5fb9-4f43-44c4-8f9d-fd0727842876')/contacts")
exit
session[:access_token]
response = http.get(path, headers)
headers
path
exit
headers['Authorization'] = {}
headers['Authorization'] = "Bearer #{session[:access_token]}"
    }
        'Content-Type' => content_type
        'Authorization' => "Bearer #{session[:access_token]}",
headers = {
content_type = CONTENT_TYPE
http = Net::HTTP.new(uri.host, uri.port)
uri = URI("#{GRAPH_RESOURCE}/v1.0/me/contacts")
continue
exit
path
session[:access_token]
http.get(path, headers)
headers
path
response
continue
exit
session[:access_token]
session[:email]
session[:name]
session
